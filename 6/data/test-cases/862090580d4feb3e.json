{"uid":"862090580d4feb3e","name":"Проверка существования issue в репозитории","fullName":"tests.test_with_allure_decorator#test_github_issue_exists","historyId":"0f1ef3280172654413f7655e570739f4","time":{"start":1750172243823,"stop":1750172254987,"duration":11164},"description":"Тест проверяет наличие issue с заголовком \"for test\" в репозитории juliSavitskaya/qa_guru_hw_8 через пользовательский UI GitHub","descriptionHtml":"<p>Тест проверяет наличие issue с заголовком &quot;for test&quot; в репозитории juliSavitskaya/qa_guru_hw_8 через пользовательский UI GitHub</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"42776e46a4e2b2f3a065827d09b5bf32\")>\n\n    @allure.title('Проверка существования issue в репозитории')\n    @allure.description(\n        'Тест проверяет наличие issue с заголовком \"for test\" в репозитории '\n        'juliSavitskaya/qa_guru_hw_8 через пользовательский UI GitHub')\n    @allure.tag(\"web\")\n    @allure.severity(Severity.CRITICAL)\n    @allure.label(\"owner\", \"juliSavitskaya\")\n    @allure.feature(\"Issue\")\n    @allure.story(\"Поиск issue в репозитории\")\n    @allure.link(\"https://github.com\", name=\"Testing\")\n    def test_github_issue_exists(browser):\n        repo = \"juliSavitskaya/qa_guru_hw_8\"\n        expected_text = \"for test\"\n    \n        open_github_main(browser)\n    \n>       search_repository(browser, repo)\n\ntests/test_with_allure_decorator.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_with_allure_decorator.py:41: in search_repository\n    search_button = WebDriverWait(browser, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"42776e46a4e2b2f3a065827d09b5bf32\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f537c679120>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1750172243459,"stop":1750172243823,"duration":364},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Тест проверяет наличие issue с заголовком \"for test\" в репозитории juliSavitskaya/qa_guru_hw_8 через пользовательский UI GitHub","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"42776e46a4e2b2f3a065827d09b5bf32\")>\n\n    @allure.title('Проверка существования issue в репозитории')\n    @allure.description(\n        'Тест проверяет наличие issue с заголовком \"for test\" в репозитории '\n        'juliSavitskaya/qa_guru_hw_8 через пользовательский UI GitHub')\n    @allure.tag(\"web\")\n    @allure.severity(Severity.CRITICAL)\n    @allure.label(\"owner\", \"juliSavitskaya\")\n    @allure.feature(\"Issue\")\n    @allure.story(\"Поиск issue в репозитории\")\n    @allure.link(\"https://github.com\", name=\"Testing\")\n    def test_github_issue_exists(browser):\n        repo = \"juliSavitskaya/qa_guru_hw_8\"\n        expected_text = \"for test\"\n    \n        open_github_main(browser)\n    \n>       search_repository(browser, repo)\n\ntests/test_with_allure_decorator.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_with_allure_decorator.py:41: in search_repository\n    search_button = WebDriverWait(browser, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"42776e46a4e2b2f3a065827d09b5bf32\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f537c679120>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException","steps":[{"name":"Открыть главную страницу GitHub","time":{"start":1750172243824,"stop":1750172244661,"duration":837},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"browser","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"42776e46a4e2b2f3a065827d09b5bf32\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Поиск репозитория \"'juliSavitskaya/qa_guru_hw_8'\"","time":{"start":1750172244662,"stop":1750172254987,"duration":10325},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/qa_guru_hw_8/qa_guru_hw_8/tests/test_with_allure_decorator.py\", line 41, in search_repository\n    search_button = WebDriverWait(browser, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, \"button.header-search-button\"))\n    )\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py\", line 138, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"browser","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"42776e46a4e2b2f3a065827d09b5bf32\")>"},{"name":"repo","value":"'juliSavitskaya/qa_guru_hw_8'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"browser::0","time":{"start":1750172254992,"stop":1750172255062,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"Поиск issue в репозитории"},{"name":"tag","value":"web"},{"name":"feature","value":"Issue"},{"name":"owner","value":"juliSavitskaya"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_with_allure_decorator"},{"name":"host","value":"fv-az1334-877"},{"name":"thread","value":"2381-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_with_allure_decorator"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Testing","url":"https://github.com","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"critical","owner":"juliSavitskaya","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["web"]},"source":"862090580d4feb3e.json","parameterValues":[]}